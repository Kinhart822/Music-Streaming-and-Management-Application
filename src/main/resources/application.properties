spring.application.name=MSMA

# PostgreSQL DB connection
#spring.datasource.url=jdbc:postgresql://localhost:5432/msma_database
#spring.datasource.url=jdbc:postgresql://db:5432/msma_database
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
spring.datasource.url=${URL}
spring.datasource.username=${USERNAME}
spring.datasource.password=${PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT
security.jwt.secret-key=${JWT_SECRET_KEY}
security.jwt.access-expiration-time=${ACCESS_EXPIRATION_TIME}
security.jwt.refresh-expiration-time=${REFRESH_EXPIRATION_TIME}

# Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# MULTIPART (MultipartProperties)
    # Enable multipart uploads
spring.servlet.multipart.enabled=true
    # Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
    # Max file size.
spring.servlet.multipart.max-file-size=200MB
    # Max Request Size
spring.servlet.multipart.max-request-size=215MB
    # File Storage Properties
        # All files uploaded through the REST API will be stored in this directory
file.upload-dir=music_upload

# Cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# Firebase
app.firebase-config=${FIREBASE_CONFIG}